<?xml version="1.0" encoding="UTF-8"?>
<configuration>

  <appSettings>
    <add key="aspnet:UseTaskFriendlySynchronizationContext" value="true"/>
  </appSettings>

  <connectionStrings>
    <!-- Running VacationManagerContext.GenerateSql test will create database. In fact any launch of those test will recreate VacationManager DB.
         For the moment it is needed to manual set the rights for the user web service is using for reading and writing to the DB.
         In my case the IIS AppPool used by Vacation Manager web aservice is running under NT AUTORITY\NETWORK SERVICE, so this user needs rights
         for reading and writing to the VacationManager database (Membership db_datareader and db_datawriter). -->
    <add name="VacationManagerContext" connectionString="Server=.;Database=VacationManager;Integrated Security=True" providerName="System.Data.SqlClient"/>
  </connectionStrings>

  <system.web>
    <compilation debug="true" targetFramework="4.5"/>
    <httpRuntime targetFramework="4.5"/>
  </system.web>

  <system.serviceModel>
    <serviceHostingEnvironment multipleSiteBindingsEnabled="true">
      <serviceActivations>
        <add relativeAddress="Locator.svc" service="VacationManager.Services.VacationService"/>
      </serviceActivations>
    </serviceHostingEnvironment>

    <services>
      <service name="VacationManager.Services.VacationService" behaviorConfiguration="MEX">
        <endpoint address="mex" binding="mexTcpBinding" contract="IMetadataExchange"/>
        <endpoint address="" binding="netTcpBinding" contract="VacationManager.Common.ServiceContracts.IVacationRequestService"/>
        <endpoint address="" binding="netTcpBinding" contract="VacationManager.Common.ServiceContracts.IVacationDaysService"/>
        <endpoint address="" binding="netTcpBinding" contract="VacationManager.Common.ServiceContracts.IEmployeeService"/>
      </service>
    </services>

    <behaviors>
      <serviceBehaviors>
        <behavior name="MEX">
          <serviceMetadata/>
        </behavior>
      </serviceBehaviors>
    </behaviors>
  </system.serviceModel>

  <system.webServer>
    <modules runAllManagedModulesForAllRequests="true"/>
    <!--
        To browse web app root directory during debugging, set the value below to true.
        Set to false before deployment to avoid disclosing web app folder information.
      -->
    <directoryBrowse enabled="false"/>
  </system.webServer>

</configuration>
